apply plugin: 'nebula'
apply plugin: 'nebula-ospackage'
apply plugin: 'com.moowork.node'

buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'com.moowork.gradle:gradle-node-plugin:0.8'
    classpath 'be.filipblondeel.gradle:gradle-gulp-plugin:0.1'
    classpath 'org.codehaus.groovy:groovy-backports-compat23:2.3.5'
  }
}

nebula {
  moduleOwner = 'deliveryengineering@netflix.com'
}


node {
    // Version of node to use.
    version = '0.12.3'
    npmVersion = '2.8.3'

    // Enabled the automatic download. False is the default (for now).
    download = true
}

task webpackPrestaging(type: Exec) {
  workingDir '.'
  commandLine 'node', 'node_modules/webpack/bin/webpack.js'
  environment = [
    "GATE_HOST": "spinnaker-api-prestaging.prod.netflix.net",
    "SPINNAKER_ENV": "prestaging"
  ]
}

task webpackProd(type: Exec) {
  workingDir '.'
  commandLine 'node', 'node_modules/webpack/bin/webpack.js'
  environment = [
    "GATE_HOST": "spinnaker-api.prod.netflix.net",
    "SPINNAKER_ENV": "main"
  ]
}

task webpackProd(type: Exec) {
  workingDir '.'
  commandLine 'node', 'node_modules/webpack/bin/webpack.js'
  environment = [
    "GATE_HOST": "spinnaker-api-test.prod.netflix.net",
    "SPINNAKER_ENV": "test"
  ]
}

webpackPrestaging.dependsOn 'npmInstall'
webpackProd.dependsOn 'npmInstall'
webpackTest.dependsOn 'npmInstall'
buildDeb.dependsOn 'webpackPrestaging'
buildDeb.dependsOn 'webpackProd'
buildDeb.dependsOn 'webpackTest'

ospackage {
  requires('nflx-cloudpassage')
  requires('platform-sidecar')
  from(project.file('dist')) {
    into '/apps/apache/htdocs'
  }

  postInstall '/sbin/chkconfig nflx-tomcat off'
  postInstall "sed -i -e 's/proxy_enabled=.*/proxy_enabled=false/' /etc/default/nflx-httpd"
}
